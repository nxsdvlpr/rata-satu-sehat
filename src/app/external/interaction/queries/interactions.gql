query interactions(
  $where: InteractionWhereInput
  $orderBy: [InteractionOrderByWithRelationInput!]
  $first: Int
  $after: String
  $last: Int
  $before: String
  $query: String
) {
  interactions(
    where: $where
    orderBy: $orderBy
    first: $first
    after: $after
    last: $last
    before: $before
    query: $query
  ) {
    nodes {
      id
      ssEncounterId
      createdAt
      updatedAt
      ref
      suborderId
      customerId
      objectiveId
      isOnline
      status
      type
      installationType
      interactionDate
      notes
      clinicId
      roomId
      staffId
      clinic {
        id
        ssLocationId
        ssOrganizationId
      }
      room {
        id
        ssLocationId
        createdAt
        updatedAt
        name
        isActive
      }
      staff {
        id
        residentIdNo
        ssPractitionerId
        createdAt
        updatedAt
        avatarAssetId
        userId
        name
      }
      emr {
        id
        createdAt
        updatedAt
        customerId
        invoiceHeaderId
        photoAssetIds
        fileAssetIds
        beforePhotoAssetIds
        afterPhotoAssetIds
        interactionId
        ssObservationIds
        ssConditionIds
        anamnesis {
          id
          doctorId
          emrId
          odontogram
          toothIcd10
          complaint
          diagnosis
          treatment
        }
      }
      slip {
        id
        createdAt
        updatedAt
        orderId
        doctorId
        slipDate
        ref
        notes
        productCount
        discount
        subtotal
        total
        status
        ssProcedureIds
        slipItems {
          id
          createdAt
          updatedAt
          seq
          productId
          plannedOrderProductId
          title
          thumbnailUrl
          price
          quantity
          subtotalPrice
          discount
          subtotal
          slipId
          product {
            id
          }
        }
      }
      interactionLogs {
        id
        interactionId
        userId
        createdAt
        status
        startAt
        endAt
      }
    }
  }
}
